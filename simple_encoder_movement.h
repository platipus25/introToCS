#pragma config(StandardModel, "RVW CLAWBOT")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

void move(float dist, float speed){
	float leftStartPos = abs(SensorValue[leftEncoder]);
	float rightStartPos = abs(SensorValue[rightEncoder]);

	motor[leftMotor] = speed;
	motor[rightMotor] = speed;

	float leftDistTraveled = abs(abs(SensorValue[rightEncoder]) - rightStartPos);
	float rightDistTraveled = abs(abs(SensorValue[leftEncoder]) - leftStartPos);

	while (leftDistTraveled < dist && rightDistTraveled < dist){
		leftDistTraveled = abs(abs(SensorValue[rightEncoder]) - rightStartPos);
		rightDistTraveled = abs(abs(SensorValue[leftEncoder]) - leftStartPos);
		wait1Msec(5);
	}
	motor[leftMotor] = 0;
	motor[rightMotor] = 0;
}

void turn(float amount, float speed){
	float leftStartPos = abs(SensorValue[leftEncoder]);
	float rightStartPos = abs(SensorValue[rightEncoder]);

	motor[leftMotor] = speed;
	motor[rightMotor] = speed * -1;

	float leftDistTraveled = abs(abs(SensorValue[rightEncoder]) - rightStartPos);
	float rightDistTraveled = abs(abs(SensorValue[leftEncoder]) - leftStartPos);

	while (leftDistTraveled < amount && rightDistTraveled < amount){
		leftDistTraveled = abs(abs(SensorValue[rightEncoder]) - rightStartPos);
		rightDistTraveled = abs(abs(SensorValue[leftEncoder]) - leftStartPos);
		writeDebugStreamLine("left has traveled: %d", leftDistTraveled);
		wait1Msec(5);
	}
	motor[leftMotor] = 0;
	motor[rightMotor] = 0;
}
